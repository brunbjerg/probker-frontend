apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.28.0 (HEAD)
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"kompose.cmd":"kompose convert -f docker-compose.yml","kompose.version":"1.28.0 (HEAD)"},"creationTimestamp":null,"labels":{"io.kompose.service":"nginx"},"name":"nginx","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"io.kompose.service":"nginx"}},"strategy":{"type":"Recreate"},"template":{"metadata":{"annotations":{"kompose.cmd":"kompose convert -f docker-compose.yml","kompose.version":"1.28.0 (HEAD)"},"creationTimestamp":null,"labels":{"io.kompose.network/probker-default":"true","io.kompose.service":"nginx"}},"spec":{"containers":[{"image":"nginx:latest","name":"nginx","ports":[{"containerPort":8080}],"resources":{},"volumeMounts":[{"mountPath":"/etc/nginx/nginx.conf","name":"nginx-claim0"}]}],"restartPolicy":"Always","volumes":[{"name":"nginx-claim0","persistentVolumeClaim":{"claimName":"nginx-claim0"}}]}}},"status":{}}
  creationTimestamp: "2023-08-13T09:08:05Z"
  generation: 4
  labels:
    io.kompose.service: nginx
  name: nginx
  namespace: default
  resourceVersion: "66390"
  uid: 5b038355-7645-4ed0-95ca-e1b52c019d79
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      io.kompose.service: nginx
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.28.0 (HEAD)
        kubectl.kubernetes.io/restartedAt: "2023-08-13T12:12:11+02:00"
      creationTimestamp: null
      labels:
        io.kompose.network/probker-default: "true"
        io.kompose.service: nginx
    spec:
      containers:
      - image: nginx:latest
        imagePullPolicy: Always
        name: nginx
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          name: nginx-claim0
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: nginx-claim0
        persistentVolumeClaim:
          claimName: nginx-claim0
status:
  conditions:
  - lastTransitionTime: "2023-08-13T10:09:46Z"
    lastUpdateTime: "2023-08-13T10:12:11Z"
    message: ReplicaSet "nginx-7657cb6bfb" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2023-08-13T11:15:39Z"
    lastUpdateTime: "2023-08-13T11:15:39Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  observedGeneration: 4
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
